% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/rmarkdown.R
\name{count_words_in_rmd_file}
\alias{count_words_in_rmd_file}
\alias{count_words_in_rmd_lines}
\alias{simplify_rmd_lines}
\title{Count words in an Rmarkdown file}
\usage{
count_words_in_rmd_file(path)

count_words_in_rmd_lines(lines)

simplify_rmd_lines(lines)
}
\arguments{
\item{path}{path to an Rmarkdown file}

\item{lines}{a character vector of text (from an Rmarkdown file)}
}
\value{
a data-frame with the counts of word, characters in words, and
whitespace characters. \code{simplify_rmd_lines()} returns a character vector of
simplified Rmarkdown lines.
}
\description{
These functions strips away code and non-prose elements before counting words.
}
\details{
The helper function \code{simplify_rmd_lines()} strips down an Rmarkdown
file so that dubious things do not contribute to the word count. It does
the following.
\enumerate{
\item Remove all lines that fall between a pair of \verb{````} lines. (These are
used sometimes to show verbatim text from blocks with three tick marks).
\item Remove all lines that fall between a pair of \verb{```} lines.
\item Lines that end with \verb{`r} are merged with the following line.
\item Inline code spans are replaced with a single word \code{(`code`)}.
\item Single-line HTML comments are deleted.
}

These steps are very ad hoc, updated and expanded as I run into new things
that need to be excluded from my word counts. Let's not pretend that this
thing is at all comprehensive.

The word-count is computed by \code{\link[stringi:stri_stats_latex]{stringi::stri_stats_latex()}}.
}
